---
import '../styles/reset.css';
import '../styles/global.css';
import Footer from '../components/Footer.astro';
import NavigationBar from '../components/NavigationBar.astro';

type Props = {
  title: string
}

const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <link href="https://fonts.googleapis.com/css2?family=Oxygen+Mono&family=Oxygen:wght@300;400;700&family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap" rel="stylesheet">
    <script is:inline src="https://kit.fontawesome.com/13f6ec1123.js" crossorigin="anonymous"></script>
    <script is:inline src="src/lib/app.js"></script>

		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
    <meta name="description" content="Daniel Cueto's website">

    <!-- SHIFT THEMES -->
    <script is:inline>
      const DARK_THEME_CLASS = "dark";
      const COLOUR_MODE = "COLOUR_MODE";
      const LIGHT_THEME = "LIGHT";
      const DARK_THEME = "DARK";

      // const toggle = document.querySelector('.top-nav .shift-mode-icon');
      const toogle = document.querySelector('button#theme-toggler-button');
      
      const rootEl = document.documentElement;

      // gets current saved colour mode or OS colour mode
      const getInitialColourMode = () => {
        const currentSavedColourMode = window.localStorage.getItem(COLOUR_MODE);
        if( currentSavedColourMode ){
          return currentSavedColourMode;
        }

        if( window.matchMedia("(prefers-color-scheme: dark)").matches ) {
          return DARK_THEME;
        }

        return LIGHT_THEME;
      };

      const initialColourMode = getInitialColourMode();

      const setInitialColourMode = (mode) => {
        if (mode === LIGHT_THEME) {
          rootEl.classList.remove(DARK_THEME_CLASS);
        } else {
          rootEl.classList.add(DARK_THEME_CLASS);
        }
      }

      setInitialColourMode(initialColourMode);
    </script>

		<title>{ title }</title>
	</head>
	<body>
    <NavigationBar></NavigationBar>
    <main>
      <slot />
    </main>
    <Footer></Footer>
	</body>
</html>